///////////////////////////////////////////////////////////////////////////////
//////////////////////////////// INCLUDES /////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

#include <thread>
#include "Process.h"

///////////////////////////////////////////////////////////////////////////////
//////////////////////////////// VARIABLES ////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

static std::shared_ptr<std::thread> appHandle;
static std::shared_ptr<std::thread> tcmsHandle;
static std::shared_ptr<std::thread> modbusHandle;
static std::shared_ptr<std::thread> debugMsgHandle;
static std::shared_ptr<std::thread> measurementsHandle;
static std::shared_ptr<std::thread> systemMonitorHandle;

///////////////////////////////////////////////////////////////////////////////
//////////////////////////////// FUNCTIONS ////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////

void Process (void)
{
    init ();
    appHandle           = std::make_shared <std::thread> (&appProcess          , nullptr);
    tcmsHandle          = std::make_shared <std::thread> (&tcmsProcess         , nullptr);
    modbusHandle        = std::make_shared <std::thread> (&modbusProcess       , nullptr);
    debugMsgHandle      = std::make_shared <std::thread> (&debugMsgProcess     , nullptr);
    measurementsHandle  = std::make_shared <std::thread> (&measurementsProcess , nullptr);
    systemMonitorHandle = std::make_shared <std::thread> (&systemMonitorProcess, nullptr);
    
    appHandle          ->join ();
    tcmsHandle         ->join ();
    modbusHandle       ->join ();
    debugMsgHandle     ->join ();
    measurementsHandle ->join ();
    systemMonitorHandle->join ();
}

///////////////////////////////////////////////////////////////////////////////
/////////////////////////////// END OF FILE ///////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
